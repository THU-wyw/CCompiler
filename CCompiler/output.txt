SyntaxNode.h: In constructor 'ExternalDeclaration::ExternalDeclaration(ExternalDeclaration::Type, ExternalDeclaration::Declaration)':
SyntaxNode.h:32:19: error: cannot convert 'ExternalDeclaration::Declaration' to 'VariableDeclaration*' in assignment
    declaration.vd = d;
                   ^
SyntaxNode.h:35:19: error: cannot convert 'ExternalDeclaration::Declaration' to 'FunctionDeclaration*' in assignment
    declaration.fd = d;
                   ^
SyntaxNode.h: In member function 'void Program::pushDeclaration(ExternalDeclaration*)':
SyntaxNode.h:43:25: error: 'class std::vector<ExternalDeclaration*>' has no member named 'pushback'
   _externalDeclarations.pushback(e);
                         ^
SyntaxNode.h: In member function 'const string& Identifier::getName()':
SyntaxNode.h:55:53: error: 'class Identifier' has no member named 'name_'
  inline const std::string& getName() { return this->name_; }
                                                     ^
SyntaxNode.h: In constructor 'UnaryExpression::UnaryExpression(const Expression*, std::string)':
SyntaxNode.h:84:15: error: invalid conversion from 'const Expression*' to 'Expression*' [-fpermissive]
   _expression = e;
               ^
SyntaxNode.h: In constructor 'BinaryExpression::BinaryExpression(const Expression*, const Expression*, std::string)':
SyntaxNode.h:97:9: error: invalid conversion from 'const Expression*' to 'Expression*' [-fpermissive]
   _left = left;
         ^
SyntaxNode.h:98:10: error: invalid conversion from 'const Expression*' to 'Expression*' [-fpermissive]
   _right = right;
          ^
SyntaxNode.h: In constructor 'VariableType::VariableType()':
SyntaxNode.h:137:22: error: 'Type' is not a class or namespace
  VariableType():type(Type::VOID), pointer(0){}
                      ^
SyntaxNode.h: At global scope:
SyntaxNode.h:147:15: error: cannot declare field 'VariableDeclaration::vt' to be of abstract type 'VariableType'
  VariableType vt;
               ^
SyntaxNode.h:129:7: note:   because the following virtual functions are pure within 'VariableType':
 class VariableType: public SyntaxNode {
       ^
SyntaxNode.h:14:15: note: 	virtual void SyntaxNode::codeGen(std::ostream&)
  virtual void codeGen(std::ostream& output) = 0;
               ^
SyntaxNode.h: In member function 'void StatementsBlock::pushStatement(Statement*)':
SyntaxNode.h:154:15: error: 'class std::vector<Statement*>' has no member named 'pushback'
   _statements.pushback(s);
               ^
SyntaxNode.h: At global scope:
SyntaxNode.h:188:52: error: expected identifier before '*' token
  WhileStatement(Expression *cond, StatementsBlock, *sb, bool hasDo = false)
                                                    ^
SyntaxNode.h:188:35: error: cannot declare parameter '<anonymous>' to be of abstract type 'StatementsBlock'
  WhileStatement(Expression *cond, StatementsBlock, *sb, bool hasDo = false)
                                   ^
SyntaxNode.h:151:7: note:   because the following virtual functions are pure within 'StatementsBlock':
 class StatementsBlock: public Statement {
       ^
SyntaxNode.h:14:15: note: 	virtual void SyntaxNode::codeGen(std::ostream&)
  virtual void codeGen(std::ostream& output) = 0;
               ^
SyntaxNode.h: In constructor 'WhileStatement::WhileStatement(Expression*, StatementsBlock, int*, bool)':
SyntaxNode.h:189:46: error: cannot convert 'int*' to 'StatementsBlock*' in initialization
   : _condition(cond), _body(sb), _hasDo(hasDo) {}
                                              ^
SyntaxNode.h: At global scope:
SyntaxNode.h:205:72: error: expected ')' before ';' token
  FunctionDeclaration(Identifier *ident, vector<VariableDeclaration*> *v;)
                                                                        ^
SyntaxNode.h:205:73: error: expected unqualified-id before ')' token
  FunctionDeclaration(Identifier *ident, vector<VariableDeclaration*> *v;)
                                                                         ^
SyntaxNode.h:207:34: error: cannot declare parameter 'vt' to be of abstract type 'VariableType'
  void setReturnType(VariableType vt){ _returnType = vt; }
                                  ^
SyntaxNode.h:129:7: note:   since type 'VariableType' has pure virtual functions
 class VariableType: public SyntaxNode {
       ^
SyntaxNode.h:210:15: error: cannot declare field 'FunctionDeclaration::_returnType' to be of abstract type 'VariableType'
  VariableType _returnType;
               ^
SyntaxNode.h:129:7: note:   since type 'VariableType' has pure virtual functions
 class VariableType: public SyntaxNode {
       ^
SyntaxNode.h:218:27: error: expected ')' before '*' token
  FunctionCall(Indentifier *func, vector<Identifier *> *v;)
                           ^
SyntaxNode.h:218:58: error: expected unqualified-id before ')' token
  FunctionCall(Indentifier *func, vector<Identifier *> *v;)
                                                          ^
In file included from CParser.y:4:0:
SyntaxNode.h: In constructor 'ExternalDeclaration::ExternalDeclaration(ExternalDeclaration::Type, ExternalDeclaration::Declaration)':
SyntaxNode.h:32:19: error: cannot convert 'ExternalDeclaration::Declaration' to 'VariableDeclaration*' in assignment
    declaration.vd = d;
                   ^
SyntaxNode.h:35:19: error: cannot convert 'ExternalDeclaration::Declaration' to 'FunctionDeclaration*' in assignment
    declaration.fd = d;
                   ^
SyntaxNode.h: In member function 'void Program::pushDeclaration(ExternalDeclaration*)':
SyntaxNode.h:43:25: error: 'class std::vector<ExternalDeclaration*>' has no member named 'pushback'
   _externalDeclarations.pushback(e);
                         ^
SyntaxNode.h: In member function 'const string& Identifier::getName()':
SyntaxNode.h:55:53: error: 'class Identifier' has no member named 'name_'
  inline const std::string& getName() { return this->name_; }
                                                     ^
SyntaxNode.h: In constructor 'UnaryExpression::UnaryExpression(const Expression*, std::string)':
SyntaxNode.h:84:15: error: invalid conversion from 'const Expression*' to 'Expression*' [-fpermissive]
   _expression = e;
               ^
SyntaxNode.h: In constructor 'BinaryExpression::BinaryExpression(const Expression*, const Expression*, std::string)':
SyntaxNode.h:97:9: error: invalid conversion from 'const Expression*' to 'Expression*' [-fpermissive]
   _left = left;
         ^
SyntaxNode.h:98:10: error: invalid conversion from 'const Expression*' to 'Expression*' [-fpermissive]
   _right = right;
          ^
SyntaxNode.h: In constructor 'VariableType::VariableType()':
SyntaxNode.h:137:22: error: 'Type' is not a class or namespace
  VariableType():type(Type::VOID), pointer(0){}
                      ^
SyntaxNode.h: At global scope:
SyntaxNode.h:147:15: error: cannot declare field 'VariableDeclaration::vt' to be of abstract type 'VariableType'
  VariableType vt;
               ^
SyntaxNode.h:129:7: note:   because the following virtual functions are pure within 'VariableType':
 class VariableType: public SyntaxNode {
       ^
SyntaxNode.h:14:15: note: 	virtual void SyntaxNode::codeGen(std::ostream&)
  virtual void codeGen(std::ostream& output) = 0;
               ^
SyntaxNode.h: In member function 'void StatementsBlock::pushStatement(Statement*)':
SyntaxNode.h:154:15: error: 'class std::vector<Statement*>' has no member named 'pushback'
   _statements.pushback(s);
               ^
SyntaxNode.h: At global scope:
SyntaxNode.h:188:52: error: expected identifier before '*' token
  WhileStatement(Expression *cond, StatementsBlock, *sb, bool hasDo = false)
                                                    ^
SyntaxNode.h:188:35: error: cannot declare parameter '<anonymous>' to be of abstract type 'StatementsBlock'
  WhileStatement(Expression *cond, StatementsBlock, *sb, bool hasDo = false)
                                   ^
SyntaxNode.h:151:7: note:   because the following virtual functions are pure within 'StatementsBlock':
 class StatementsBlock: public Statement {
       ^
SyntaxNode.h:14:15: note: 	virtual void SyntaxNode::codeGen(std::ostream&)
  virtual void codeGen(std::ostream& output) = 0;
               ^
SyntaxNode.h: In constructor 'WhileStatement::WhileStatement(Expression*, StatementsBlock, int*, bool)':
SyntaxNode.h:189:46: error: cannot convert 'int*' to 'StatementsBlock*' in initialization
   : _condition(cond), _body(sb), _hasDo(hasDo) {}
                                              ^
SyntaxNode.h: At global scope:
SyntaxNode.h:205:72: error: expected ')' before ';' token
  FunctionDeclaration(Identifier *ident, vector<VariableDeclaration*> *v;)
                                                                        ^
SyntaxNode.h:205:73: error: expected unqualified-id before ')' token
  FunctionDeclaration(Identifier *ident, vector<VariableDeclaration*> *v;)
                                                                         ^
SyntaxNode.h:207:34: error: cannot declare parameter 'vt' to be of abstract type 'VariableType'
  void setReturnType(VariableType vt){ _returnType = vt; }
                                  ^
SyntaxNode.h:129:7: note:   since type 'VariableType' has pure virtual functions
 class VariableType: public SyntaxNode {
       ^
SyntaxNode.h:210:15: error: cannot declare field 'FunctionDeclaration::_returnType' to be of abstract type 'VariableType'
  VariableType _returnType;
               ^
SyntaxNode.h:129:7: note:   since type 'VariableType' has pure virtual functions
 class VariableType: public SyntaxNode {
       ^
SyntaxNode.h:218:27: error: expected ')' before '*' token
  FunctionCall(Indentifier *func, vector<Identifier *> *v;)
                           ^
SyntaxNode.h:218:58: error: expected unqualified-id before ')' token
  FunctionCall(Indentifier *func, vector<Identifier *> *v;)
                                                          ^
In file included from CParser.y:13:0,
                 from CToken.l:6:
SyntaxNode.h: In constructor 'ExternalDeclaration::ExternalDeclaration(ExternalDeclaration::Type, ExternalDeclaration::Declaration)':
SyntaxNode.h:32:19: error: cannot convert 'ExternalDeclaration::Declaration' to 'VariableDeclaration*' in assignment
    declaration.vd = d;
                   ^
SyntaxNode.h:35:19: error: cannot convert 'ExternalDeclaration::Declaration' to 'FunctionDeclaration*' in assignment
    declaration.fd = d;
                   ^
SyntaxNode.h: In member function 'void Program::pushDeclaration(ExternalDeclaration*)':
SyntaxNode.h:43:25: error: 'class std::vector<ExternalDeclaration*>' has no member named 'pushback'
   _externalDeclarations.pushback(e);
                         ^
SyntaxNode.h: In member function 'const string& Identifier::getName()':
SyntaxNode.h:55:53: error: 'class Identifier' has no member named 'name_'
  inline const std::string& getName() { return this->name_; }
                                                     ^
SyntaxNode.h: In constructor 'UnaryExpression::UnaryExpression(const Expression*, std::string)':
SyntaxNode.h:84:15: error: invalid conversion from 'const Expression*' to 'Expression*' [-fpermissive]
   _expression = e;
               ^
SyntaxNode.h: In constructor 'BinaryExpression::BinaryExpression(const Expression*, const Expression*, std::string)':
SyntaxNode.h:97:9: error: invalid conversion from 'const Expression*' to 'Expression*' [-fpermissive]
   _left = left;
         ^
SyntaxNode.h:98:10: error: invalid conversion from 'const Expression*' to 'Expression*' [-fpermissive]
   _right = right;
          ^
SyntaxNode.h: In constructor 'VariableType::VariableType()':
SyntaxNode.h:137:22: error: 'Type' is not a class or namespace
  VariableType():type(Type::VOID), pointer(0){}
                      ^
SyntaxNode.h: At global scope:
SyntaxNode.h:147:15: error: cannot declare field 'VariableDeclaration::vt' to be of abstract type 'VariableType'
  VariableType vt;
               ^
SyntaxNode.h:129:7: note:   because the following virtual functions are pure within 'VariableType':
 class VariableType: public SyntaxNode {
       ^
SyntaxNode.h:14:15: note: 	virtual void SyntaxNode::codeGen(std::ostream&)
  virtual void codeGen(std::ostream& output) = 0;
               ^
SyntaxNode.h: In member function 'void StatementsBlock::pushStatement(Statement*)':
SyntaxNode.h:154:15: error: 'class std::vector<Statement*>' has no member named 'pushback'
   _statements.pushback(s);
               ^
SyntaxNode.h: At global scope:
SyntaxNode.h:188:52: error: expected identifier before '*' token
  WhileStatement(Expression *cond, StatementsBlock, *sb, bool hasDo = false)
                                                    ^
SyntaxNode.h:188:35: error: cannot declare parameter '<anonymous>' to be of abstract type 'StatementsBlock'
  WhileStatement(Expression *cond, StatementsBlock, *sb, bool hasDo = false)
                                   ^
SyntaxNode.h:151:7: note:   because the following virtual functions are pure within 'StatementsBlock':
 class StatementsBlock: public Statement {
       ^
SyntaxNode.h:14:15: note: 	virtual void SyntaxNode::codeGen(std::ostream&)
  virtual void codeGen(std::ostream& output) = 0;
               ^
SyntaxNode.h: In constructor 'WhileStatement::WhileStatement(Expression*, StatementsBlock, int*, bool)':
SyntaxNode.h:189:46: error: cannot convert 'int*' to 'StatementsBlock*' in initialization
   : _condition(cond), _body(sb), _hasDo(hasDo) {}
                                              ^
SyntaxNode.h: At global scope:
SyntaxNode.h:205:72: error: expected ')' before ';' token
  FunctionDeclaration(Identifier *ident, vector<VariableDeclaration*> *v;)
                                                                        ^
SyntaxNode.h:205:73: error: expected unqualified-id before ')' token
  FunctionDeclaration(Identifier *ident, vector<VariableDeclaration*> *v;)
                                                                         ^
SyntaxNode.h:207:34: error: cannot declare parameter 'vt' to be of abstract type 'VariableType'
  void setReturnType(VariableType vt){ _returnType = vt; }
                                  ^
SyntaxNode.h:129:7: note:   since type 'VariableType' has pure virtual functions
 class VariableType: public SyntaxNode {
       ^
SyntaxNode.h:210:15: error: cannot declare field 'FunctionDeclaration::_returnType' to be of abstract type 'VariableType'
  VariableType _returnType;
               ^
SyntaxNode.h:129:7: note:   since type 'VariableType' has pure virtual functions
 class VariableType: public SyntaxNode {
       ^
SyntaxNode.h:218:27: error: expected ')' before '*' token
  FunctionCall(Indentifier *func, vector<Identifier *> *v;)
                           ^
SyntaxNode.h:218:58: error: expected unqualified-id before ')' token
  FunctionCall(Indentifier *func, vector<Identifier *> *v;)
                                                          ^
CToken.l: In function 'int yylex()':
CToken.l:55:10: error: 'RIGHT_ARROW' was not declared in this scope
 "->"       { return RIGHT_ARROW; }
          ^
CToken.l:60:10: error: 'MOD_ASSIGN' was not declared in this scope
 "%="                            { return MOD_ASSIGN; }
          ^
CToken.l:61:10: error: 'SHIFT_LEFT_ASSIGN' was not declared in this scope
 "<<="                           { return SHIFT_LEFT_ASSIGN; }
          ^
CToken.l:62:10: error: 'SHIFT_RIGHT_ASSIGN' was not declared in this scope
 ">>="                           { return SHIFT_RIGHT_ASSIGN; }
          ^
CToken.l:63:9: error: 'AND_ASSIGN' was not declared in this scope
 "&="                            {return AND_ASSIGN; }
         ^
CToken.l:64:9: error: 'EXCLUSIVE_OR_ASSIGN' was not declared in this scope
 "^="                            {return EXCLUSIVE_OR_ASSIGN; }
         ^
CToken.l:65:9: error: 'INCLUSIVE_OR_ASSIGN' was not declared in this scope
 "|="                            {return INCLUSIVE_OR_ASSIGN; }
         ^
CToken.l:72:10: error: 'SHIFT_LEFT_OP' was not declared in this scope
 "<<"                            { return SHIFT_LEFT_OP; }
          ^
CToken.l:73:10: error: 'SHIFT_RIGHT_OP' was not declared in this scope
 ">>"                            { return SHIFT_RIGHT_OP; }
          ^
In file included from main.cpp:2:0:
SyntaxNode.h: In constructor 'ExternalDeclaration::ExternalDeclaration(ExternalDeclaration::Type, ExternalDeclaration::Declaration)':
SyntaxNode.h:32:19: error: cannot convert 'ExternalDeclaration::Declaration' to 'VariableDeclaration*' in assignment
    declaration.vd = d;
                   ^
SyntaxNode.h:35:19: error: cannot convert 'ExternalDeclaration::Declaration' to 'FunctionDeclaration*' in assignment
    declaration.fd = d;
                   ^
SyntaxNode.h: In member function 'void Program::pushDeclaration(ExternalDeclaration*)':
SyntaxNode.h:43:25: error: 'class std::vector<ExternalDeclaration*>' has no member named 'pushback'
   _externalDeclarations.pushback(e);
                         ^
SyntaxNode.h: In member function 'const string& Identifier::getName()':
SyntaxNode.h:55:53: error: 'class Identifier' has no member named 'name_'
  inline const std::string& getName() { return this->name_; }
                                                     ^
SyntaxNode.h: In constructor 'UnaryExpression::UnaryExpression(const Expression*, std::string)':
SyntaxNode.h:84:15: error: invalid conversion from 'const Expression*' to 'Expression*' [-fpermissive]
   _expression = e;
               ^
SyntaxNode.h: In constructor 'BinaryExpression::BinaryExpression(const Expression*, const Expression*, std::string)':
SyntaxNode.h:97:9: error: invalid conversion from 'const Expression*' to 'Expression*' [-fpermissive]
   _left = left;
         ^
SyntaxNode.h:98:10: error: invalid conversion from 'const Expression*' to 'Expression*' [-fpermissive]
   _right = right;
          ^
SyntaxNode.h: In constructor 'VariableType::VariableType()':
SyntaxNode.h:137:22: error: 'Type' is not a class or namespace
  VariableType():type(Type::VOID), pointer(0){}
                      ^
SyntaxNode.h: At global scope:
SyntaxNode.h:147:15: error: cannot declare field 'VariableDeclaration::vt' to be of abstract type 'VariableType'
  VariableType vt;
               ^
SyntaxNode.h:129:7: note:   because the following virtual functions are pure within 'VariableType':
 class VariableType: public SyntaxNode {
       ^
SyntaxNode.h:14:15: note: 	virtual void SyntaxNode::codeGen(std::ostream&)
  virtual void codeGen(std::ostream& output) = 0;
               ^
SyntaxNode.h: In member function 'void StatementsBlock::pushStatement(Statement*)':
SyntaxNode.h:154:15: error: 'class std::vector<Statement*>' has no member named 'pushback'
   _statements.pushback(s);
               ^
SyntaxNode.h: At global scope:
SyntaxNode.h:188:52: error: expected identifier before '*' token
  WhileStatement(Expression *cond, StatementsBlock, *sb, bool hasDo = false)
                                                    ^
SyntaxNode.h:188:35: error: cannot declare parameter '<anonymous>' to be of abstract type 'StatementsBlock'
  WhileStatement(Expression *cond, StatementsBlock, *sb, bool hasDo = false)
                                   ^
SyntaxNode.h:151:7: note:   because the following virtual functions are pure within 'StatementsBlock':
 class StatementsBlock: public Statement {
       ^
SyntaxNode.h:14:15: note: 	virtual void SyntaxNode::codeGen(std::ostream&)
  virtual void codeGen(std::ostream& output) = 0;
               ^
SyntaxNode.h: In constructor 'WhileStatement::WhileStatement(Expression*, StatementsBlock, int*, bool)':
SyntaxNode.h:189:46: error: cannot convert 'int*' to 'StatementsBlock*' in initialization
   : _condition(cond), _body(sb), _hasDo(hasDo) {}
                                              ^
SyntaxNode.h: At global scope:
SyntaxNode.h:205:72: error: expected ')' before ';' token
  FunctionDeclaration(Identifier *ident, vector<VariableDeclaration*> *v;)
                                                                        ^
SyntaxNode.h:205:73: error: expected unqualified-id before ')' token
  FunctionDeclaration(Identifier *ident, vector<VariableDeclaration*> *v;)
                                                                         ^
SyntaxNode.h:207:34: error: cannot declare parameter 'vt' to be of abstract type 'VariableType'
  void setReturnType(VariableType vt){ _returnType = vt; }
                                  ^
SyntaxNode.h:129:7: note:   since type 'VariableType' has pure virtual functions
 class VariableType: public SyntaxNode {
       ^
SyntaxNode.h:210:15: error: cannot declare field 'FunctionDeclaration::_returnType' to be of abstract type 'VariableType'
  VariableType _returnType;
               ^
SyntaxNode.h:129:7: note:   since type 'VariableType' has pure virtual functions
 class VariableType: public SyntaxNode {
       ^
SyntaxNode.h:218:27: error: expected ')' before '*' token
  FunctionCall(Indentifier *func, vector<Identifier *> *v;)
                           ^
SyntaxNode.h:218:58: error: expected unqualified-id before ')' token
  FunctionCall(Indentifier *func, vector<Identifier *> *v;)
                                                          ^
